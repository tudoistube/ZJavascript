<!DOCTYPE html>

<html>
<head>
    <title>Date 객체</title>
    <script>
        var date = new Date();
        date.setDate(date.getDate() + 7);
        alert(date);
    </script>

    <script>
        //...Date 객체 to***String 메서드.
        var date2 = new Date(1991, 12, 9);

        var output = '';
        output += '★toDateString: ' + date.toDateString() + '\n';
        output += '★toGMTString: ' + date.toGMTString() + '\n';
        output += '★toLocaleDateString: ' + date.toLocaleDateString() + '\n';
        output += '★toLocaleString: ' + date.toLocaleString() + '\n';
        output += '★toLocaleTimeString: ' + date.toLocaleTimeString() + '\n';
        output += '★toString: ' + date.toString() + '\n';
        output += '★toTimeString: ' + date.toTimeString() + '\n';
        output += '★toUTCString: ' + date.toUTCString() + '\n';
        alert(output);
    </script>

    <script>
        //...날짜간격.
        var now = new Date();
        var before = new Date('December 9, 1991');
        var interval = now.getTime() - before.getTime();
        interval = Math.floor(interval / (1000 * 60 * 60 * 24));
        alert('Interval : ' + interval + ' 일');

        //...Date 생성자함수의 프로토타입에 날짜간격을 구하는 메서드를 추가하면 코드가 심플해진다.
        Date.prototype.getInterval = function (date2) {
            var interval2;
            //...양수날짜간격을 구함.
            if (this > date2) {
                interval2 = this.getTime() - date2.getTime();
            } else {
                interval2 = date2.getTime() - this.getTime();
            } //if.
            return Math.floor(interval2 / (1000 * 60 * 60 * 24));
        };
        var now2 = new Date();
        var before2 = new Date('December 9, 1991');
        
        alert('Interval2 : ' + now.getInterval(before2)+ ' 일');
    </script>
</head>
<body>

</body>
</html>